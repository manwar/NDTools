#!/usr/bin/env perl

my $ABOUT = "Merge nested data";
my $VERSION = '0.01';

use strict;
use warnings FATAL => 'all';

use File::Basename qw(basename);
use File::Slurp qw(read_file write_file);
use Getopt::Long qw(:config bundling);
use Hash::Merge qw(merge);
use JSON qw(from_json to_json);
use Log::Log4Cli;
use NDTools::HMBehs qw(R_OVERRIDE);
use Struct::Diff qw(diff dsplit);

# defaults
my $OPTS = {
    'verbose' => 0,
};

my $e_code = 0;
my $prog_name = basename($0);

sub usage() {
    print STDERR <<USAGE_TEXT;
$prog_name -- $ABOUT

Usage:
    $prog_name [OPTIONS] <arguments>

Options:
    --file|f <file>
        file to merge
    --help
        print this message
    --mergeset|mset <file>
        write mergeset to specified file
    --verbose
        increase verbosity, max level: 4
    --version
        as is

Examples:
    Merge files:
        $prog_name a.json b.json c.json

USAGE_TEXT
}

my @rules;

if (not GetOptions (
    'file|f=s' => sub { push @rules, { src => $_[1] }},
    'help|h' => sub { usage; exit 1; },
    'mergeset|mset=s' => \$OPTS->{'mergeset'},
    'verbose|v:+' => \$OPTS->{'verbose'},
    'version' => sub { print "$VERSION"; exit 0; },
)) { usage(); exit 1; }

$Log::Log4Cli::L = $OPTS->{'verbose'};

my @mset; # merge set, i.e. blame
my $result;

Hash::Merge::specify_behavior(R_OVERRIDE);

while (my $f = shift @ARGV) { push @rules, { src => $f }}; # files may also be defined via args

for (my $r = 0; $r < @rules; $r++) {
    die_fatal "Undefined source in $r rule" unless (defined $rules[$r]{src});
    my $file = $rules[$r]{src};
    log_debug { "Loading file '$file'" };
    my $loaded = from_json(read_file($file), {relaxed => 1});
    log_trace { "Merge it, overriding previous" };
    my $merged = merge($result, $loaded);
    if ($OPTS->{'mergeset'}) {
        push @mset, dsplit(diff($result, $merged, noO => 1, noU => 1));
        $mset[-1]->{src} = $file;
    }
    $result = $merged;
}

write_file($OPTS->{'mergeset'}, to_json(\@mset, {allow_nonref => 1, canonical => 1, pretty => 1}))
    if ($OPTS->{'mergeset'});

print to_json($result, {allow_nonref => 1, canonical => 1, pretty => 1});

die_info "All done", $e_code;
